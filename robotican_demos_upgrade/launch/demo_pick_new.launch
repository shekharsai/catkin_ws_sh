<?xml version="1.0"?>


<!--EXAMPLE

roslaunch armadillo2 armadillo2.launch kinect:=true gazebo:=true moveit:=true world_name:="`rospack find armadillo2_gazebo`/worlds/objects_on_table.world" x:=0.3 y:=-0.35

roslaunch object_detection pick_and_place.launch  

rosservice call /pick_go "{}"
-->

<launch>
    
    <arg name="start_position" default="cobra_center" /> <!--ninety_deg-->
    <arg name="end_position" default="to_cheak" />
    <arg name="give_position" default="give" />
    
    <!--
	<node name="poses" pkg="tal" type="poses_srv" output="screen" required="true">
        <param name="~end_position_name" value="$(arg end_position)"/>
        <param name="~give_position_name" value="$(arg give_position)"/>
        <param name="~object_name" value="can"/>        
    	</node>
     -->
    
    
    
    <node name="pick" pkg="robotican_demos_upgrade" type="pick_can" output="screen" required="true">
        <param name="~start_position_name" value="$(arg start_position)"/>
        <param name="~end_position_name" value="$(arg end_position)"/>
        <param name="~object_name" value="can"/>
    </node>

    
    <!--
    	<node name="place" pkg="robotican_demos_upgrade" type="place_can" output="screen" required="true">
        <param name="~start_position_name" value="$(arg start_position)"/>
        <param name="~object_name" value="can"/>
    	</node>
    -->


    <node name="place_table" pkg="robotican_demos_upgrade" type="place_can_table" output="screen" required="true">
        <param name="~start_position_name" value="$(arg start_position)"/>
        <param name="~object_name" value="can"/>
    </node>


    <!--give object to person with yellow shirt-->
    <node name="place_person" pkg="robotican_demos_upgrade" type="place_can_person" output="screen" required="true">
        <param name="~start_position_name" value="$(arg start_position)"/>
        <param name="~object_name" value="can"/>
    </node>
    
    
    <!--simulation-->
    
    <node name="find_object_node" pkg="object_detection" type="find_objects_node" output="screen">
        <param name="~object_id" value="1"/>
        <param name="~depth_topic1" value="/kinect2/qhd/points"/>   #/kinect2/qhd/points
        <param name="~depth_topic2" value="/intel_d435/depth_registered/points"/>  
        <rosparam file="$(find object_detection)/config/red_object.yaml" command="load"/>
    </node>

    
    <!--Real world--><!--
      <node name="find_object_node" pkg="object_detection" type="find_objects_node_yolo" output="screen">
        <param name="~object_id" value="1"/>
        <param name="~depth_topic1" value="/kinect2/qhd/points"/>   #/kinect2/qhd/points
        <param name="~depth_topic2" value="/intel_d435/depth_registered/points"/>  
        <rosparam file="$(find object_detection)/config/red_object.yaml" command="load"/>
    </node>-->


    <!-- Ditect tables -color based -->
    <node name="find_object_node_table" pkg="object_detection" type="find_objects_node_table" output="screen">
        <param name="~object_id" value="0"/>
        <param name="~depth_topic1" value="/kinect2/qhd/points"/>   #/kinect2/qhd/points
        <param name="~depth_topic2" value="/kinect2/qhd/points"/>  
        <rosparam file="$(find object_detection)/config/table_object.yaml" command="load"/>
    </node>

       <!-- Detect person-color based on yellow shirt -->
    <node name="find_object_node_person" pkg="object_detection" type="find_objects_node_person" output="screen">
        <param name="~object_id" value="0"/>
        <param name="~depth_topic1" value="/kinect2/qhd/points"/>   #/kinect2/qhd/points
        <param name="~depth_topic2" value="/kinect2/qhd/points"/>  
        <rosparam file="$(find object_detection)/config/person_object.yaml" command="load"/>
    </node> 
    
    
    
    <node name="objects_handler" pkg="object_detection" type="objects_handler" output="screen">
        <param name="~db_path" value=""/>
    </node> 

    <!--object hendeler for table-->
    <!--
    <node name="objects_handler_table" pkg="object_detection" type="objects_handler_table" output="screen">
        <param name="~db_path" value=""/>
    </node>--> 
    
    <node name="object_view" pkg="rqt_image_view" type="rqt_image_view" >
        <remap from="image" to="find_object_node/result" />
    </node>

    <node name="object_view_table" pkg="rqt_image_view" type="rqt_image_view" >
        <remap from="image" to="find_object_node_table/result" />
    </node>
    
</launch>


